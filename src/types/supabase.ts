/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/subscriptions": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.subscriptions.id"];
          created_at?: parameters["rowFilter.subscriptions.created_at"];
          updated_at?: parameters["rowFilter.subscriptions.updated_at"];
          title?: parameters["rowFilter.subscriptions.title"];
          description?: parameters["rowFilter.subscriptions.description"];
          url?: parameters["rowFilter.subscriptions.url"];
          muted?: parameters["rowFilter.subscriptions.muted"];
          icon?: parameters["rowFilter.subscriptions.icon"];
          user?: parameters["rowFilter.subscriptions.user"];
          articles?: parameters["rowFilter.subscriptions.articles"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["subscriptions"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** subscriptions */
          subscriptions?: definitions["subscriptions"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.subscriptions.id"];
          created_at?: parameters["rowFilter.subscriptions.created_at"];
          updated_at?: parameters["rowFilter.subscriptions.updated_at"];
          title?: parameters["rowFilter.subscriptions.title"];
          description?: parameters["rowFilter.subscriptions.description"];
          url?: parameters["rowFilter.subscriptions.url"];
          muted?: parameters["rowFilter.subscriptions.muted"];
          icon?: parameters["rowFilter.subscriptions.icon"];
          user?: parameters["rowFilter.subscriptions.user"];
          articles?: parameters["rowFilter.subscriptions.articles"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.subscriptions.id"];
          created_at?: parameters["rowFilter.subscriptions.created_at"];
          updated_at?: parameters["rowFilter.subscriptions.updated_at"];
          title?: parameters["rowFilter.subscriptions.title"];
          description?: parameters["rowFilter.subscriptions.description"];
          url?: parameters["rowFilter.subscriptions.url"];
          muted?: parameters["rowFilter.subscriptions.muted"];
          icon?: parameters["rowFilter.subscriptions.icon"];
          user?: parameters["rowFilter.subscriptions.user"];
          articles?: parameters["rowFilter.subscriptions.articles"];
        };
        body: {
          /** subscriptions */
          subscriptions?: definitions["subscriptions"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/articles": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.articles.id"];
          created_at?: parameters["rowFilter.articles.created_at"];
          title?: parameters["rowFilter.articles.title"];
          url?: parameters["rowFilter.articles.url"];
          pub_date?: parameters["rowFilter.articles.pub_date"];
          description?: parameters["rowFilter.articles.description"];
          content?: parameters["rowFilter.articles.content"];
          is_read?: parameters["rowFilter.articles.is_read"];
          subscription?: parameters["rowFilter.articles.subscription"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["articles"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** articles */
          articles?: definitions["articles"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.articles.id"];
          created_at?: parameters["rowFilter.articles.created_at"];
          title?: parameters["rowFilter.articles.title"];
          url?: parameters["rowFilter.articles.url"];
          pub_date?: parameters["rowFilter.articles.pub_date"];
          description?: parameters["rowFilter.articles.description"];
          content?: parameters["rowFilter.articles.content"];
          is_read?: parameters["rowFilter.articles.is_read"];
          subscription?: parameters["rowFilter.articles.subscription"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.articles.id"];
          created_at?: parameters["rowFilter.articles.created_at"];
          title?: parameters["rowFilter.articles.title"];
          url?: parameters["rowFilter.articles.url"];
          pub_date?: parameters["rowFilter.articles.pub_date"];
          description?: parameters["rowFilter.articles.description"];
          content?: parameters["rowFilter.articles.content"];
          is_read?: parameters["rowFilter.articles.is_read"];
          subscription?: parameters["rowFilter.articles.subscription"];
        };
        body: {
          /** articles */
          articles?: definitions["articles"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
}

export interface definitions {
  /** @description User's Subscriptions */
  subscriptions: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default extensions.uuid_generate_v4()
     */
    id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    updated_at?: string;
    /** Format: text */
    title: string;
    /** Format: text */
    description?: string;
    /** Format: text */
    url: string;
    /**
     * Format: boolean
     * @default false
     */
    muted: boolean;
    /** Format: text */
    icon?: string;
    /** Format: uuid */
    user: string;
    /** Format: ARRAY */
    articles?: unknown[];
  };
  /** @description Articles belonging to Subscriptions */
  articles: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: text */
    title: string;
    /** Format: text */
    url: string;
    /** Format: timestamp with time zone */
    pub_date: string;
    /** Format: text */
    description?: string;
    /** Format: text */
    content?: string;
    /**
     * Format: boolean
     * @default false
     */
    is_read?: boolean;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `subscriptions.id`.<fk table='subscriptions' column='id'/>
     */
    subscription?: string;
  };
}

export interface parameters {
  /**
   * @description Preference
   * @enum {string}
   */
  preferParams: "params=single-object";
  /**
   * @description Preference
   * @enum {string}
   */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /**
   * @description Preference
   * @enum {string}
   */
  preferCount: "count=none";
  /** @description Filtering Columns */
  select: string;
  /** @description On Conflict */
  on_conflict: string;
  /** @description Ordering */
  order: string;
  /** @description Limiting and Pagination */
  range: string;
  /**
   * @description Limiting and Pagination
   * @default items
   */
  rangeUnit: string;
  /** @description Limiting and Pagination */
  offset: string;
  /** @description Limiting and Pagination */
  limit: string;
  /** @description subscriptions */
  "body.subscriptions": definitions["subscriptions"];
  /** Format: uuid */
  "rowFilter.subscriptions.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.subscriptions.created_at": string;
  /** Format: timestamp with time zone */
  "rowFilter.subscriptions.updated_at": string;
  /** Format: text */
  "rowFilter.subscriptions.title": string;
  /** Format: text */
  "rowFilter.subscriptions.description": string;
  /** Format: text */
  "rowFilter.subscriptions.url": string;
  /** Format: boolean */
  "rowFilter.subscriptions.muted": string;
  /** Format: text */
  "rowFilter.subscriptions.icon": string;
  /** Format: uuid */
  "rowFilter.subscriptions.user": string;
  /** Format: ARRAY */
  "rowFilter.subscriptions.articles": string;
  /** @description articles */
  "body.articles": definitions["articles"];
  /** Format: uuid */
  "rowFilter.articles.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.articles.created_at": string;
  /** Format: text */
  "rowFilter.articles.title": string;
  /** Format: text */
  "rowFilter.articles.url": string;
  /** Format: timestamp with time zone */
  "rowFilter.articles.pub_date": string;
  /** Format: text */
  "rowFilter.articles.description": string;
  /** Format: text */
  "rowFilter.articles.content": string;
  /** Format: boolean */
  "rowFilter.articles.is_read": string;
  /** Format: uuid */
  "rowFilter.articles.subscription": string;
}

// export interface operations {}

// export interface external {}
